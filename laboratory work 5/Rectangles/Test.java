package com.company;

public class Test {
    public static void main(String[] args) {
        RectangleSet s = new RectangleSet();
        {
            s.add(new Rectangle(new double[] {11, -15, -25, 8}, new double[] {-26, 13, -16, 6}));
            s.add(new double[] {8, 4, 8, 23}, new double[] {-25, 22, -29, 5});
            s.add(new double[] {24, -16, -15, 18}, new double[] {24, -18, -21, 19});
            s.add(new double[] {-6, 21, -9, 23}, new double[] {24, 8, 3, 5});
            s.add(new double[] {17, -7, 12, -18}, new double[] {26, 29, 16, 0});
            s.add(new double[] {19, 6, 21, -20}, new double[] {-5, -15, 1, -17});
            s.add(new double[] {-10, 13, 12, 12}, new double[] {7, 3, -30, 6});
            s.add(new double[] {8, -11, 7, -21}, new double[] {10, -20, 28, -15});
            s.add(new double[] {-9, 1, 13, 4}, new double[] {20, 23, 19, 24});
            s.add(new double[] {20, 24, -3, -27}, new double[] {-7, -6, 10, 27});
            s.add(new double[] {17, 10, -15, 23}, new double[] {-9, -6, 21, -19});
            s.add(new double[] {17, 20, 22, 25}, new double[] {-13, 0, -5, 22});
            s.add(new double[] {29, -3, -18, 25}, new double[] {25, -6, 26, -7});
            s.add(new double[] {-18, 0, -15, -3}, new double[] {-9, 7, -11, 13});
            s.add(new double[] {-23, -21, 0, -21}, new double[] {-19, 0, -14, 6});
            s.add(new double[] {24, 0, 21, -1}, new double[] {14, -12, -14, -23});
            s.add(new double[] {-23, 5, -7, 19}, new double[] {12, 0, -20, -27});
            s.add(new double[] {-24, -8, -17, 12}, new double[] {13, -15, 9, -24});
            s.add(new double[] {-18, 18, -25, 25}, new double[] {9, -8, -14, -13});
            s.add(new double[] {-11, -12, -15, 7}, new double[] {18, 26, 13, 11});
            s.add(new double[] {18, 5, -5, -11}, new double[] {8, 22, -23, -3});
            s.add(new double[] {16, 3, -13, -29}, new double[] {2, 4, -20, -27});
            s.add(new double[] {14, -18, 12, -23}, new double[] {7, 6, 25, -20});
            s.add(new double[] {-17, -15, -6, 23}, new double[] {-7, -28, 0, 13});
            s.add(new double[] {28, -22, 20, -15}, new double[] {-20, 23, -13, 1});
            s.add(new double[] {7, -12, 6, -9}, new double[] {26, 19, 5, 8});
            s.add(new double[] {-19, -3, -14, -4}, new double[] {26, -10, -29, 23});
            s.add(new double[] {9, 15, 12, 15}, new double[] {6, 3, 0, 29});
            s.add(new double[] {14, -13, 13, 18}, new double[] {11, -24, 7, -10});
            s.add(new double[] {10, -8, -26, -23}, new double[] {5, -26, 22, -21});
            s.add(new double[] {21, -25, 6, 19}, new double[] {-10, 20, -8, 5});
            s.add(new double[] {22, -9, -4, -12}, new double[] {-5, 26, -9, 18});
            s.add(new double[] {-22, -29, -21, -26}, new double[] {20, -19, 16, 4});
            s.add(new double[] {-27, -14, -30, -18}, new double[] {-14, 3, 1, 2});
            s.add(new double[] {-20, 15, 2, -3}, new double[] {23, -4, 8, 11});
            s.add(new double[] {-23, -20, -15, -24}, new double[] {-19, -17, 25, -17});
            s.add(new double[] {2, -5, 4, 7}, new double[] {20, 22, 11, 21});
            s.add(new double[] {29, 23, 21, 8}, new double[] {23, 8, 23, -14});
            s.add(new double[] {3, 23, -21, 19}, new double[] {-7, 21, 15, 20});
            s.add(new double[] {-3, 21, -11, 2}, new double[] {-29, 0, -10, 24});
            s.add(new double[] {-11, 24, 19, 27}, new double[] {21, 13, 18, 14});
            s.add(new double[] {-5, -27, 11, 18}, new double[] {-25, -12, -14, 22});
            s.add(new double[] {-10, -3, 17, 19}, new double[] {3, -1, -4, -5});
            s.add(new double[] {28, -20, -22, -6}, new double[] {26, -12, -13, -4});
            s.add(new double[] {-25, 27, 2, -30}, new double[] {7, 17, 8, 16});
            s.add(new double[] {-11, 10, 10, 15}, new double[] {9, -25, -1, -22});
            s.add(new double[] {-22, -10, -3, -23}, new double[] {3, -29, -21, -8});
            s.add(new double[] {-23, 7, -25, -6}, new double[] {4, 23, 0, -6});
            s.add(new double[] {-6, -1, 4, -4}, new double[] {-11, -9, -10, -4});
            s.add(new double[] {15, 0, 14, 1}, new double[] {-11, 23, -29, -5});
            s.add(new double[] {-28, 0, -15, -14}, new double[] {21, -6, 28, -11});
            s.add(new double[] {6, 29, 14, 23}, new double[] {10, -9, 18, -7});
            s.add(new double[] {-17, -21, -12, -28}, new double[] {-14, -21, -4, -7});
            s.add(new double[] {23, 3, 6, -4}, new double[] {-12, 11, 14, 16});
            s.add(new double[] {10, -14, -11, 25}, new double[] {-26, 26, -3, -23});
            s.add(new double[] {5, 21, -19, -1}, new double[] {8, -1, -20, -30});
            s.add(new double[] {-16, 23, -5, -4}, new double[] {4, -9, 2, 10});
            s.add(new double[] {11, 2, -2, -19}, new double[] {-2, -21, 5, -12});
            s.add(new double[] {6, 2, 10, -18}, new double[] {13, 12, 23, 11});
            s.add(new double[] {-8, -2, -5, -9}, new double[] {-16, -12, -13, 19});
            s.add(new double[] {-14, -26, 20, 0}, new double[] {-1, -29, 22, -7});
            s.add(new double[] {6, -27, -16, -11}, new double[] {20, -8, 2, -1});
            s.add(new double[] {0, 3, -6, -3}, new double[] {-27, -15, -7, -4});
            s.add(new double[] {-19, -5, 19, -10}, new double[] {0, -26, -7, -21});
            s.add(new double[] {-19, -1, -11, 14}, new double[] {-24, -23, -13, 19});
            s.add(new double[] {28, 1, -30, -26}, new double[] {11, -10, -6, -18});
            s.add(new double[] {29, -12, 15, -5}, new double[] {-24, 17, -1, -7});
            s.add(new double[] {-10, 19, -3, 2}, new double[] {20, -28, 27, -29});
            s.add(new double[] {-17, 14, -14, 0}, new double[] {26, -29, 25, -5});
            s.add(new double[] {22, -12, -8, -24}, new double[] {2, 10, 21, 15});
            s.add(new double[] {-1, 21, -11, 28}, new double[] {7, -28, -27, -18});
            s.add(new double[] {-13, 9, -7, -7}, new double[] {25, -22, 18, 29});
            s.add(new double[] {-16, -5, -30, -2}, new double[] {26, -26, -24, -28});
            s.add(new double[] {-26, -30, -28, -21}, new double[] {21, 23, 6, -1});
            s.add(new double[] {24, -19, 9, -13}, new double[] {10, -4, 12, -12});
            s.add(new double[] {21, 0, -5, -19}, new double[] {16, 25, 0, 7});
            s.add(new double[] {25, 5, -1, 28}, new double[] {17, -20, -19, 9});
            s.add(new double[] {-13, 26, -8, -5}, new double[] {28, -23, 29, -26});
            s.add(new double[] {-8, -1, -14, -25}, new double[] {28, 25, 26, 15});
            s.add(new double[] {-7, 5, -6, 7}, new double[] {19, 0, -4, -13});
            s.add(new double[] {9, -23, 0, -21}, new double[] {0, 8, -20, -3});
            s.add(new double[] {7, -13, 9, -15}, new double[] {-5, 6, -3, 8});
            s.add(new double[] {18, 13, 0, 19}, new double[] {26, 5, 28, 2});
            s.add(new double[] {-4, 25, -10, -10}, new double[] {-10, 13, -16, -27});
            s.add(new double[] {-1, -27, 3, -16}, new double[] {8, 17, 8, 19});
            s.add(new double[] {0, -16, 10, -15}, new double[] {-7, -4, -19, -1});
            s.add(new double[] {25, -15, 25, -18}, new double[] {-15, -30, 7, 10});
            s.add(new double[] {-8, -3, 3, 15}, new double[] {3, -5, 2, 0});
            s.add(new double[] {22, 11, 17, 18}, new double[] {-21, 18, -9, 0});
            s.add(new double[] {-5, 10, -17, 21}, new double[] {-15, 17, 15, -22});
            s.add(new double[] {17, 6, 20, 2}, new double[] {-26, 5, 23, -19});
            s.add(new double[] {6, -14, -13, -29}, new double[] {-17, 21, -5, 25});
            s.add(new double[] {15, -18, -6, 16}, new double[] {-8, 7, -9, 7});
            s.add(new double[] {9, 9, -14, 2}, new double[] {-30, 1, 17, 14});
            s.add(new double[] {-7, -9, 17, 11}, new double[] {-12, 3, 8, 23});
            s.add(new double[] {-3, -13, -21, -19}, new double[] {-18, 8, 6, 6});
            s.add(new double[] {11, 24, 13, 22}, new double[] {13, 5, 4, 21});
            s.add(new double[] {3, -16, -2, -28}, new double[] {-28, -1, -22, 6});
            s.add(new double[] {-28, 27, -10, 11}, new double[] {-6, 18, -9, 24});
            s.add(new double[] {8, -14, 18, -10}, new double[] {10, 5, -20, 5});
        }

        System.out.printf("[0, 10): %s\n", s.convexAreas().filter(x -> 0 <= x && x < 10).count());
        System.out.printf("[10, 20): %s\n", s.convexAreas().filter(x -> 10 <= x && x < 20).count());
        System.out.printf("[20, 30): %s\n", s.convexAreas().filter(x -> 20 <= x && x < 30).count());
        System.out.printf("[30, 40): %s\n", s.convexAreas().filter(x -> 30 <= x && x < 40).count());
        System.out.printf("[40, 50): %s\n", s.convexAreas().filter(x -> 40 <= x && x < 50).count());
        System.out.printf("[50, 60): %s\n", s.convexAreas().filter(x -> 50 <= x && x < 60).count());
        System.out.printf("[60, 70): %s\n", s.convexAreas().filter(x -> 60 <= x && x < 70).count());
        System.out.printf("[70, 80): %s\n", s.convexAreas().filter(x -> 70 <= x && x < 80).count());
        System.out.printf("[80, 90): %s\n", s.convexAreas().filter(x -> 80 <= x && x < 90).count());
        System.out.printf("[90, 100): %s\n", s.convexAreas().filter(x -> 90 <= x && x < 100).count());

        System.out.println(Math.sqrt(s.maxDiagsRectangle().get().getSumDiags()));
    }
}
